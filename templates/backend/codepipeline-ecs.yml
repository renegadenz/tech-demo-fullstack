AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  CodeCommitRepoName:
    Type: String
  CodeBuildImage:
    Type: String
    Default: 'aws/codebuild/standard:5.0'
  ECRRepoName:
    Type: String
  ServiceName:
    Type: String
  ImageTag:
    Type: String
    Default: 'latest'
  ExistingClusterName:
    Type: String
  TaskDefinitionFamily:
    Type: String
  ECSAppName:
    Type: String
  ECSServiceName:
    Type: String

Resources:

  ArtifactBucket:
    Type: AWS::S3::Bucket

  # CodeBuild IAM role
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetRepositoryPolicy
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                  - ecr:BatchGetImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
                Resource: '*'
              - Effect: Allow
                Action:
                  - codecommit:GitPull
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource: '*'

  # CodePipeline IAM role
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - codebuild:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - codedeploy:*
                Resource: '*'

  # CodeBuild project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join ['', [!Ref ServiceName, '-build']]
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables: 
          - Name: IMAGE_TAG
            Value: !Ref ImageTag
          - Name: ECR_REPO_URI
            Value: !Join ['', [!Ref 'AWS::AccountId', '.dkr.ecr.', !Ref 'AWS::Region', '.amazonaws.com/', !Ref ECRRepoName]]
      Source:
        Type: CODECOMMIT
        Location: !Join ['', ['https://git-codecommit.', !Ref 'AWS::Region', '.amazonaws.com/v1/repos/', !Ref CodeCommitRepoName]]
      Artifacts:
        Type: NO_ARTIFACTS
      TimeoutInMinutes: 5
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Join ['', ['/aws/codebuild/', !Ref ServiceName, '-build']]
          Status: ENABLED
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Join ['', [!Ref ServiceName, '-pipeline']]
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Location: !Ref ArtifactBucket 
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                RepositoryName: !Ref CodeCommitRepoName
                BranchName: 'main'
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CodeDeployToECS
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref CodeDeployDeploymentGroup
              RunOrder: 1
  CodeDeployApp:
    Type: AWS::CodeDeploy::App
    Properties:
      ApplicationName: !Ref ECSAppName
      ComputePlatform: 'ECS'

  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApp
      DeploymentGroupName: !Join ['', [!Ref ServiceName, '-deployment-group']]
      DeploymentConfigName: 'CodeDeployDefault.ECSAllAtOnce'
      ServiceRoleArn: !GetAtt CodePipelineRole.Arn
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - 'DEPLOYMENT_FAILURE'
      BlueGreenDeploymentConfiguration:
        DeploymentReadyOption:
          ActionOnTimeout: 'CONTINUE_DEPLOYMENT'
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: 'TERMINATE_OLD_BUNDLE'
      DeploymentStyle:
        DeploymentType: 'BLUE_GREEN'
        DeploymentOption: 'WITH_TRAFFIC_CONTROL'
      EcsServices:
        - ServiceName: !Ref ECSServiceName
          ClusterName: !Ref ExistingClusterName